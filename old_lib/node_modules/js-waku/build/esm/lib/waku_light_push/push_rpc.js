import { Reader } from 'protobufjs/minimal';
import { v4 as uuid } from 'uuid';
import * as proto from '../../proto/waku/v2/light_push';
var PushRPC = /** @class */ (function () {
    function PushRPC(proto) {
        this.proto = proto;
    }
    PushRPC.createRequest = function (message, pubSubTopic) {
        return new PushRPC({
            requestId: uuid(),
            request: {
                message: message.proto,
                pubSubTopic: pubSubTopic,
            },
            response: undefined,
        });
    };
    PushRPC.decode = function (bytes) {
        var res = proto.PushRPC.decode(Reader.create(bytes));
        return new PushRPC(res);
    };
    PushRPC.prototype.encode = function () {
        return proto.PushRPC.encode(this.proto).finish();
    };
    Object.defineProperty(PushRPC.prototype, "query", {
        get: function () {
            return this.proto.request;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PushRPC.prototype, "response", {
        get: function () {
            return this.proto.response;
        },
        enumerable: false,
        configurable: true
    });
    return PushRPC;
}());
export { PushRPC };
//# sourceMappingURL=push_rpc.js.map