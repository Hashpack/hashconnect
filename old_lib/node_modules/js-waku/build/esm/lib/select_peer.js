/**
 * Returns a pseudo-random peer that supports the given protocol.
 * Useful for protocols such as store and light push
 */
export function selectRandomPeer(peers) {
    if (peers.length === 0)
        return;
    var index = Math.round(Math.random() * (peers.length - 1));
    return peers[index];
}
/**
 * Returns the list of peers that supports the given protocol.
 */
export function getPeersForProtocol(libp2p, protocol) {
    return Array.from(libp2p.peerStore.peers.values()).filter(function (peer) {
        return peer.protocols.includes(protocol);
    });
}
//# sourceMappingURL=select_peer.js.map